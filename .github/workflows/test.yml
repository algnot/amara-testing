name: Test and Report

on:
  push:
    branches: [main]

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Set environment variables
        run: |
          echo "CYPRESS_UI_ENDPOINT=${{ secrets.CYPRESS_UI_ENDPOINT }}" >> $GITHUB_ENV
          echo "CYPRESS_SUPER_ADMIN_EMAIL=${{ secrets.CYPRESS_SUPER_ADMIN_EMAIL }}" >> $GITHUB_ENV
          echo "CYPRESS_SUPER_ADMIN_PASSWORD=${{ secrets.CYPRESS_SUPER_ADMIN_PASSWORD }}" >> $GITHUB_ENV

      - name: Run Cypress tests
        run: npx cypress run --reporter cypress-mochawesome-reporter

      - name: Prepare report folder
        if: always()
        run: |
          mkdir -p deploy/${{ github.sha }}
          cp -r cypress/reports/html/* deploy/${{ github.sha }}

      - name: Clean old reports
        if: always()
        run: |
          cd deploy
          ls -1dt */ | tail -n +51 | xargs -d '\n' rm -rf --

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          destination_dir: .
          keep_files: true

      - name: Report URL
        if: always()
        run: |
          echo "report URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.sha }}/"

      - name: Notify Discord with test result
        if: always()
        run: |
          STATUS="${{ job.status }}"
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.sha }}/"
          MESSAGE="**‚úÖ Cypress Test Result: \`${STATUS}\`**
                    üîó [View Test Report](${REPORT_URL})
                    üì¶ Repo: \`${{ github.repository }}\`
                    üîÅ Commit: \`${{ github.sha }}\`"
                              curl -H "Content-Type: application/json" \
                                  -X POST \
                                  -d "{\"content\": \"$MESSAGE\"}" \
                                  ${{ secrets.DISCORD_WEBHOOK_URL }}
